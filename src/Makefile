#
#   Если хочешь знать, как это работает, загляни в
#       https://habr.com/ru/post/155201/.
#   Если этого мало, отведай https://stackoverflow.com/questions/2734719/
#       how-to-compile-a-static-library-in-linux
#

CC=gcc
CFLAGS=-Wall -Wextra -Werror -D DEBUG_
LDFLAGS=
GREP_SOURCES=$(wildcard ./grep/s21_*.c)
GREP_OBJECTS=$(GREP_SOURCES:.c=.o)
GREP_EXE=./grep/s21_grep
CAT_SOURCES=$(wildcard ./cat/s21_*.c)
CAT_OBJECTS=$(CAT_SOURCES:.c=.o)
CAT_EXE=./cat/s21_cat

##TEST_SOURCES=./test.c
##CLIBS=-lm $(shell pkg-config --cflags --libs check)


all: clean grep cpplint


%.o: %.c ./grep/s21_grep.h
	$(CC) -c $(CFLAGS) $< -o $@


$(GREP_EXE): $(GREP_OBJECTS)
	clear
	$(CC) $^ -o $@


$(CAT_EXE): $(CAT_OBJECTS)
	clear
	$(CC) $^ -o $@


s21_grep: $(GREP_EXE)


s21_cat: $(CAT_EXE)


s21_grep_test: clean s21_grep
	########################################################RIGHT:
	   grep     "reg....()" ./sometext.txt
	#########################################################MINE:
	$(GREP_EXE) "reg....()" ./sometext.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	echo "hello\nYES\nyes\nheYlo\nyye\nHEILO" \
        |    grep     -i -e he.lo
	#########################################################MINE:
	echo "hello\nYES\nyes\nheYlo\nyye\nHEILO" \
        | $(GREP_EXE) -i -e he.lo
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	echo "yes" |    grep     -i E
	#########################################################MINE:
	echo "yes" | $(GREP_EXE) -i E
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -v -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	#########################################################MINE:
	$(GREP_EXE) -v -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -c "reg....()" ./sometext.txt
	#########################################################MINE:
	$(GREP_EXE) -c "reg....()" ./sometext.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -l -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	#########################################################MINE:
	$(GREP_EXE) -l -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -n -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	#########################################################MINE:
	$(GREP_EXE) -n -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -h "reg....()" ./sometext.txt ./sometext1.txt
	#########################################################MINE:
	$(GREP_EXE) -h "reg....()" ./sometext.txt ./sometext1.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -s "reg....()" ./sometext.txt ./sometext1.txt
	#########################################################MINE:
	$(GREP_EXE) -s "reg....()" ./sometext.txt ./sometext1.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -s "reg....()" ./sometext.txt ./blabla; exit 0
	#########################################################MINE:
	$(GREP_EXE) -s "reg....()" ./sometext.txt ./blabla
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -f patterns.txt ./grep/s21_main.c ./sometext1.txt; exit 0
	#########################################################MINE:
	$(GREP_EXE) -f patterns.txt ./grep/s21_main.c ./sometext1.txt; exit 0
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -o "reg....()" ./sometext.txt
	#########################################################MINE:
	$(GREP_EXE) -o "reg....()" ./sometext.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     "o" ./sometext.txt ./sometext1.txt
	#########################################################MINE:
	$(GREP_EXE) "o" ./sometext.txt ./sometext1.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     "y" ./sometext.txt ./sometext1.txt
	#########################################################MINE:
	$(GREP_EXE) "y" ./sometext.txt ./sometext1.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -e "y" ./sometext.txt ./sometext1.txt
	#########################################################MINE:
	$(GREP_EXE) -e "y" ./sometext.txt ./sometext1.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	#########################################################MINE:
	$(GREP_EXE) -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -i -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	#########################################################MINE:
	$(GREP_EXE) -i -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -n -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	#########################################################MINE:
	$(GREP_EXE) -n -e "reg....()" -e "form" ./sometext.txt ./sometext1.txt
	######################################################################
	######################################################################
	######################################################################
	########################################################RIGHT:
	   grep     -e "reg()" -e "frm" ./sometext.txt ./sometext4.txt; exit 0
	#########################################################MINE:
	$(GREP_EXE) -e "reg()" -e "frm" ./sometext.txt ./sometext4.txt; exit 0



s21_cat_test: clean $(CAT_EXE)
	########################################################RIGHT:
	       cat -n -b $(CAT_EXE) > cat.out
	#########################################################MINE:
	$(CAT_EXE) -n -b $(CAT_EXE) > s21_cat.out


clean:
	find ./ \( -iname "*.gcda" \
		-or -iname "*.gcov" \
		-or -iname "*.gcno" \
		-or -iname "*.out" \
		-or -iname "*.o" \
		-or -iname "*.a" \
		-or -iname "*.html" \
		-or -iname "*.info" \
		-or -iname "*.css" \
		-or -iname "*.png" \
		-or -wholename $(GREP_EXE) \
		-or -type d -name  ".DS_Store" \
	\) -exec mv {} /tmp/ \;

	####	Directories


cpplint:
	cp ../materials/linters/CPPLINT.cfg ./
	python3 ../materials/linters/cpplint.py --extensions=c \
        ./*.c \
    	./*.h


valgrind: ./unit_tests.out
	valgrind \
		-s \
		--track-origins=yes \
		--show-leak-kinds=all \
		./unit_tests.out; exit 0;
	#valgrind \
    #   -s \
	#	--leak-check=full \
	#	--leak-resolution=med \
	#	--log-file=RESULT_VALGRIND.txt \
	#	./unit_tests.out
	#valgrind \
	#	--show-leak-kinds=all \
	#	--track-origins=no \
	#	--log-file=RESULT_VALGRIND.txt \
	#	-s \
	#	./unit_tests.out
		#--leak-check=full --- "each individual leak will be shown in detail"
		#--show-leak-kinds=all --- Show all of "definite, indirect, possible,
		#   reachable" leak kinds in the "full" report.
		#--track-origins=yes --- Favor useful output over speed. This tracks
		#   the origins of uninitialized values, which could be very useful for
		#   memory errors. Consider turning off if Valgrind is unacceptably
		#   slow.
		#--verbose: Can tell you about unusual behavior of your program. Repeat
		#   for more verbosity.
		#--log-file: Write to a file. Useful when output exceeds terminal space.


cppcheck:
	cppcheck --enable=all --suppress=missingIncludeSystem $(SOURCES)

